x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

volumes:
  prometheus:
    name: ${INDEXER_NAME}-monitor_prometheus
  prometheus-config:
    external: true
    name: ${INDEXER_NAME}-monitor_prometheus-config
  grafana:
    name: ${INDEXER_NAME}-monitor_grafana
  grafana-provisioning:
    external: true
    name: ${INDEXER_NAME}-monitor_grafana-provisioning
  alertmanager-config:
    external: true
    name: ${INDEXER_NAME}-monitor_alertmanager-config
  alertmanager-data:
    name: ${INDEXER_NAME}-monitor_alertmanager-data

networks:
  indexer-monitor:
    name: ${INDEXER_NAME}-monitor

services:
  prometheus:
    image: prom/prometheus
    container_name: ${INDEXER_NAME}-monitor-prometheus
    networks:
      - indexer-monitor
    environment:
      PROJECT: ${INDEXER_NAME}-monitor
      VIRTUAL_HOST: ${PROMETHEUS_HOST}
      VIRTUAL_PORT: 9090
      LETSENCRYPT_HOST: ${PROMETHEUS_HOST}
    volumes:
      - prometheus-config:/etc/prometheus
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    # expose:
    #   - 9090
    ports:
      - 127.0.0.1:9090:9090 # exposing internally metric port for monitoring
    restart: unless-stopped
    logging: *default-logging

  grafana:
    image: grafana/grafana
    container_name: ${INDEXER_NAME}-monitor-grafana
    networks:
      - indexer-monitor
    # depends_on:
    #   - postgres-node
    volumes:
      - grafana:/var/lib/grafana
      - grafana-provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASS}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION: true
      GF_INSTALL_PLUGINS: fifemon-graphql-datasource
      PROJECT: ${INDEXER_NAME}-monitor
      POSTGRES_HOST: postgres-node
      POSTGRES_USER: ${DB_NODE_USER}
      POSTGRES_PASS: ${DB_NODE_PASS}
      POSTGRES_DB: ${DB_NODE_NAME}
      SUBGRAPH_ENDPOINT: ${NETWORK_SUBGRAPH_ENDPOINT}
      PROMETHEUS_HOST: ${INDEXER_NAME}-monitor-prometheus
      VIRTUAL_HOST: ${GRAFANA_HOST}
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: ${GRAFANA_HOST}
    expose:
      - 3000
    restart: unless-stopped
    logging: *default-logging

  alertmanager:
    image: prom/alertmanager
    container_name: ${INDEXER_NAME}-monitor-alertmanager
    networks:
      - indexer-monitor
    volumes:
      - alertmanager-config:/etc/alertmanager
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    expose:
      - 9093
    restart: unless-stopped
    logging: *default-logging

  node-exporter:
    image: prom/node-exporter
    container_name: ${INDEXER_NAME}-monitor-node-exporter
    networks:
      - indexer-monitor
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      # - /:/rootfs:ro
      - type: bind
        source: /
        target: /rootfs
        read_only: true
        bind:
          propagation: rslave      
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    restart: unless-stopped
    logging: *default-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: ${INDEXER_NAME}-monitor-cadvisor
    networks:
      - indexer-monitor
    volumes:
      # - /:/rootfs:ro
      - type: bind
        source: /
        target: /rootfs
        read_only: true
        bind:
          propagation: rslave      
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      # - /var/lib/docker:/var/lib/docker:ro
      - type: bind
        source: /var/lib/docker/
        target: /var/lib/docker
        read_only: true
        bind:
          propagation: rslave
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    expose:
      - 8080
    restart: unless-stopped
    logging: *default-logging

  pushgateway:
    image: prom/pushgateway
    container_name: ${INDEXER_NAME}-monitor-pushgateway
    networks:
      - indexer-monitor
    expose:
      - 9091
    restart: unless-stopped
    logging: *default-logging