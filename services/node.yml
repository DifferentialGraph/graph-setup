x-logging:
  &default-logging
  options:
    max-file: '1'
    compress: 'false'
  driver: local

volumes:
  db-node:
    name: graph-node_db-node
  db-socket:
    name: graph-node_db-socket
  node-config:
    external: true
    name: graph-node_config

networks:
  graph-node:
    name: graph-node

services:
  index-node:
    image: graphprotocol/graph-node:${NODE_VERSION:-v0.37.0}
    container_name: index-node
    networks:
      - graph-node
    expose:
      - 8000
      - 8001
      - 8030
      - 8040
    depends_on:
      - postgres-node
    environment:
      node_role: index-node
      node_id: index_node
      postgres_host: postgres-node
      postgres_user: ${DB_NODE_USER}
      postgres_pass: ${DB_NODE_PASS}
      postgres_db: ${DB_NODE_NAME}
      ipfs: https://ipfs.network.thegraph.com/ipfs/
      # ethereum: ${CHAIN_RPC}
      GRAPH_NODE_CONFIG: /root/node-config/config.toml
      GRAPH_LOG: DEBUG
      RUST_LOG: INFO
      # GRAPH_ETH_CALL_GAS: 50000000
      GRAPH_GETH_ETH_CALL_ERRORS: "out of gas"
      GRAPH_MAX_GAS_PER_HANDLER: 1000000000000000
      ETHEREUM_TRACE_STREAM_STEP_SIZE: 50
      ETHEREUM_BLOCK_BATCH_SIZE: 10
      # ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: 64
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: 2000
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: 100
      GRAPH_KILL_IF_UNRESPONSIVE: true
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: true
      EXPERIMENTAL_SUBGRAPH_VERSION_SWITCHING_MODE: synced
      BLOCK_INGESTOR: index_node
      ETHEREUM_POLLING_INTERVAL: 500
      GRAPH_ETH_CALL_NO_GAS: 421613,42161
      # GRAPH_MAX_SPEC_VERSION: 1.2.0
    volumes:
      - db-socket:/var/run/postgresql
      - node-config:/root/node-config/
    restart: unless-stopped
    logging: *default-logging

  query-node:
    image: graphprotocol/graph-node:${NODE_VERSION:-v0.37.0}
    container_name: query-node
    networks:
      - graph-node
    ports:
      - 127.0.0.1:8000:8000 # port to query subgraphs
    expose:
      # - 8000
      - 8001
      - 8020
      - 8030
      - 8040
    depends_on:
      - postgres-node
    environment:
      node_role: query-node
      node_id: query_node
      postgres_host: postgres-node
      postgres_user: ${DB_NODE_USER}
      postgres_pass: ${DB_NODE_PASS}
      postgres_db: ${DB_NODE_NAME}
      ipfs: https://ipfs.network.thegraph.com/ipfs/
      # ethereum: ${CHAIN_RPC}
      GRAPH_NODE_CONFIG: /root/node-config/config.toml
      GRAPH_LOG: DEBUG
      RUST_LOG: INFO
      # GRAPH_ETH_CALL_GAS: 50000000
      GRAPH_GETH_ETH_CALL_ERRORS: "out of gas"
      GRAPH_MAX_GAS_PER_HANDLER: 1000000000000000
      # GRAPH_LOG_QUERY_TIMING: gql
      EXPERIMENTAL_SUBGRAPH_VERSION_SWITCHING_MODE: synced
      GRAPH_KILL_IF_UNRESPONSIVE: true
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: true
      # GRAPH_MAX_SPEC_VERSION: 1.2.0
      VIRTUAL_HOST: thegraph.${NODE_HOST}
      VIRTUAL_PORT: 8000
      LETSENCRYPT_HOST: thegraph.${NODE_HOST}
      VIRTUAL_HOST_MULTIPORTS: |-
        thegraph.${NODE_HOST}:
          "/":
            port: 8000
            dest: "/subgraphs/id/${NETWORK_SUBGRAPH_DEPLOYMENT:-QmdKXcBUHR3UyURqVRQHu1oV6VUkBrhi2vNvMx3bNDnUCc}"
          "/ws":
            port: 8001
            dest: "/subgraphs/id/${NETWORK_SUBGRAPH_DEPLOYMENT:-QmdKXcBUHR3UyURqVRQHu1oV6VUkBrhi2vNvMx3bNDnUCc}"
          "/epoch":
            port: 8000
            dest: "/subgraphs/id/${EPOCH_SUBGRAPH_DEPLOYMENT:-QmW26TG5s9myd1gzio9fkgVHEEjZ7u5ktWDpkNePzbusNo}"
          "/epoch/ws":
            port: 8001
            dest: "/subgraphs/id/${EPOCH_SUBGRAPH_DEPLOYMENT:-QmW26TG5s9myd1gzio9fkgVHEEjZ7u5ktWDpkNePzbusNo}"
          "/escrow":
            port: 8000
            dest: "/subgraphs/id/${ESCROW_SUBGRAPH_DEPLOYMENT:-QmUhiH6Z5xo6o3GNzsSvqpGKLmCt6w5WzKQ1yHk6C8AA8S}"
          "/escrow/ws":
            port: 8001
            dest: "/subgraphs/id/${ESCROW_SUBGRAPH_DEPLOYMENT:-QmUhiH6Z5xo6o3GNzsSvqpGKLmCt6w5WzKQ1yHk6C8AA8S}"
    volumes:
      - db-socket:/var/run/postgresql
      - node-config:/root/node-config/
    restart: unless-stopped
    logging:
        driver: "journald"

  postgres-node:
    image: postgres:${DB_NODE_VERSION:-16.4}
    container_name: postgres-node
    shm_size: 1gb
    networks:
      - graph-node
    ports:
      - 127.0.0.1:5432:5432
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: ${DB_NODE_USER}
      POSTGRES_PASSWORD: ${DB_NODE_PASS}
      POSTGRES_DB: ${DB_NODE_NAME}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - db-node:/var/lib/postgresql/data
      - db-socket:/var/run/postgresql
    restart: unless-stopped
    logging: *default-logging
