#!/bin/bash
source $GRAPH_DIR/install --source

graph-monitor() {
    if [ "$1" = "node" ]; then
        [ -z "$( docker ps | grep index-node )" ] && { echo "index-node not runnning."; return; }
        [ -z "$( docker ps | grep query-node )" ] && { echo "query-node not runnning."; return; }

        SESSIONEXISTS=$(tmux list-sessions | grep graph-node)

        if [ "$SESSIONEXISTS" = "" ];
        then
            tmux new-session -d -s graph-node

            tmux rename-window -t 0 'node-cli'
            tmux send-keys -t "node-cli" "docker exec -it query-node /bin/bash"  C-m

            tmux new-window -t graph-node:1 -n 'index-node'
            tmux send-keys -t 'index-node' "docker logs index-node --tail 10 -f | pino-pretty -c -t" C-m

            tmux new-window -t graph-node:2 -n 'query-node'
            tmux send-keys -t 'query-node' "docker logs query-node --tail 10 -f | pino-pretty -c -t" C-m
        fi
        tmux attach-session -t graph-node:0
    elif [ "$1" = "indexer" ]; then
        [ -z "$2" ] && { echo "Indexer name not provided."; return; }
        [ -z "$( docker ps | grep $2-indexer-cli )" ] && { echo "Indexer ${2} not found."; return; }

        SESSIONEXISTS=$(tmux list-sessions | grep $2-indexer)

        if [ "$SESSIONEXISTS" = "" ];
        then
            tmux new-session -d -s $2-indexer

            tmux rename-window -t 0 'indexer-cli'
            tmux send-keys -t "indexer-cli" "docker exec -it ${2}-indexer-cli /bin/bash"  C-m

            tmux new-window -t $2-indexer:1 -n 'indexer-agent'
            tmux send-keys -t 'indexer-agent' "docker logs ${2}-indexer-agent --tail 10 -f | pino-pretty -c -t" C-m

            tmux new-window -t $2-indexer:2 -n 'indexer-service'
            tmux send-keys -t 'indexer-service' "docker logs ${2}-indexer-service --tail 10 -f | pino-pretty -c -t" C-m

            tmux new-window -t $2-indexer:3 -n 'indexer-tap'
            tmux send-keys -t 'indexer-tap' "docker logs ${2}-indexer-tap --tail 10 -f | pino-pretty -c -t" C-m
        fi
        tmux attach-session -t $2-indexer:0
    else
        echo "Option not available."
        return
    fi
}

graph-start() {
    [ -z $1 ] && { echo "Error: select one component (node, indexer, monitor, all)"; return; }

    case $1 in
        "node")
            node-start
            ;;
        "indexer")
            indexer-start $2
            ;;
        "monitor")
            monitor-start
            ;;
        *)
            [ -z $2 ] && { echo "Error: select indexer"; return; }
            graph-start node && graph-start indexer $2 && graph-start monitor
            ;;
    esac
}

graph-stop() {
    [ -z $1 ] && { echo "Error: select one component (node, indexer, monitor, all)"; return; }

    case $1 in
        "node")
            [ -f "$GRAPH_DIR/envs/node.env" ] || { echo "Error: user node.env file not found"; return 1; }
            COMPOSE_FILE=$GRAPH_DIR/services/node.yml docker compose --env-file $GRAPH_DIR/envs/node.env stop
            ;;
        "indexer")
            [ -z $2 ] && { echo "Error: select indexer env"; return; }
            [ -f "$GRAPH_DIR/envs/$2.env" ] || { echo "Error: user $2.env file not found"; return 1; }
            INDEXER_ENV=$GRAPHDIR/envs/${2}.env \
            COMPOSE_FILE=$GRAPH_DIR/services/indexer.yml docker compose --env-file $GRAPH_DIR/envs/${2}.env stop
            ;;
        "monitor")
            [ -f "$GRAPH_DIR/envs/monitor.env" ] || { echo "Error: user monitor.env file not found"; return 1; }
            COMPOSE_FILE=$GRAPH_DIR/services/monitor.yml \
            docker compose --env-file $GRAPH_DIR/envs/monitor.env stop
            ;;
        *)
            [ -z $2 ] && { echo "Error: select indexer"; return; }
            graph-stop node && graph-stop indexer $2 && graph-stop monitor $2
            ;;
    esac
}

graph-restart() {
    [ -z $1 ] && { echo "Error: select one component (node, indexer, monitor, all)"; return; }

    if [ -z $2 ]; then
        graph-stop $1 && graph-start $1
    else
        graph-stop $1 $2 && graph-start $1 $2
    fi
}
